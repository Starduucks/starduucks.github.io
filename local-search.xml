<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>密评能力验证（一）：国密TLS</title>
    <link href="/2024/08/13/%E5%AF%86%E8%AF%84%E8%83%BD%E5%8A%9B%E9%AA%8C%E8%AF%81%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9B%BD%E5%AF%86TLS/"/>
    <url>/2024/08/13/%E5%AF%86%E8%AF%84%E8%83%BD%E5%8A%9B%E9%AA%8C%E8%AF%81%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9B%BD%E5%AF%86TLS/</url>
    
    <content type="html"><![CDATA[<p>根据密评要求，只有使用了国密算法和国密TLS等协议，相关测评指标才可能得到满分。因此在密评实践中，国密算法的检测是绕不开的一环。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>国密TLS协议实际上是由国际上TLS协议的变体，主要参考了TLS1.1和TLS1.2。国密TLS（GMTLS），又称GMTLS1.1，涉及的主要标准有：</p><ul><li>《信息安全技术 传输层密码协议(TLCP)》，即GB&#x2F;T 38636-2020，TLCP协议。</li><li>《SSL VPN技术规范》，即GM&#x2F;T 0024-2014，GMTLS协议。</li><li>上述协议关联标准：如数字证书标准GB&#x2F;T 20518, SM2密码算法标准GB&#x2F;T 35275等<br>注：《SSL VPN技术规范》作为行业标准，部分内容已上升为《信息安全技术 传输层密码协议(TLCP)》国密标准。但两者间差别不大，后文中介绍的内容以后者为准。</li></ul><p>GMTLS1.1中的1.1代表国密TLS的版本号: 0x0101。作为对比，目前TLS协议支持的版本：</p><pre><code class="hljs">VersionTLS10 = 0x0301VersionTLS11 = 0x0302VersionTLS12 = 0x0303VersionTLS13 = 0x0304</code></pre><p>目前主流的TLS软件程序实现中，通信实体在建立TLS连接时，会优先协商使用最大版本号TLS协议 (版本号越大意味着安全性越高、性能越好)，因此VersionGMSSL &#x3D; 0x0101 版本号的设定增加了软件支持的复杂度，这也是阻碍GMTLS1.1广泛应用的一个重要原因。（注：SSL1.0版本的版本号为0x0100，这几乎意味着只有当通信双方至少一方仅支持GMTLS协议时，才能建立GMTLS信道。）</p><h2 id="GMTLS，TLCP，TLS之间的差别"><a href="#GMTLS，TLCP，TLS之间的差别" class="headerlink" title="GMTLS，TLCP，TLS之间的差别"></a>GMTLS，TLCP，TLS之间的差别</h2><h3 id="GMTLS与TLS之间的差别主要有三点："><a href="#GMTLS与TLS之间的差别主要有三点：" class="headerlink" title="GMTLS与TLS之间的差别主要有三点："></a>GMTLS与TLS之间的差别主要有三点：</h3><ul><li>协议的版本号不同，握手和加密协议细节不同；</li><li>协议采用的主要是SM2&#x2F;SM3&#x2F;SM4算法，不同于TLS采用的国际密码算法；</li><li>采用的是SM2双证书体系。</li></ul><h3 id="GMTLS和TLCP之间的差别"><a href="#GMTLS和TLCP之间的差别" class="headerlink" title="GMTLS和TLCP之间的差别"></a>GMTLS和TLCP之间的差别</h3><p>TLCP作为国标，相比GMTLS有以下变化：</p><ul><li>增加了对GCM模式的支持</li><li>去掉了对SM1的支持</li></ul><p><img src="/2024/08/13/%E5%AF%86%E8%AF%84%E8%83%BD%E5%8A%9B%E9%AA%8C%E8%AF%81%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9B%BD%E5%AF%86TLS/img_cs2.png"></p><!-- <img src="/密评能力验证（一）：国密TLS/img_cs2.png"> --><p>上图列举了TLCP协议中所使用的密码套件。可以发现一个很有趣的现象：TLCP协议不仅支持RSA作为密钥协商算法，还支持SHA256以进行哈希和完整性校验。网上有人猜测，是为了支持国际组织颁发的数字证书，同时作为过渡逐渐与国际接轨。这里有待进一步探讨。</p><h2 id="算法套件解析"><a href="#算法套件解析" class="headerlink" title="算法套件解析"></a>算法套件解析</h2><p>尽管TLCP（GMTLS）协议主要借鉴的是TLS1.1，但是其密码套件的命名方式与TLS1.1（TLS1.2及以前）以及TLS1.3都不相同。下面分别介绍这三种协议中密码套件的命名方式。</p><h3 id="TLS1-2及以前"><a href="#TLS1-2及以前" class="headerlink" title="TLS1.2及以前"></a>TLS1.2及以前</h3><p>CipherSuite TLS_（密钥协商算法）_WITH_（对称加密算法）_（哈希算法）<br>以TLS_RSA_WITH_RC4_128_SHA为例：RSA指代密钥协商用的是RSA密钥交换，即server提供RSA公钥并在server hello数据包中发送至client，再由client在client key exchange数据包中发送给server。RC4_128指的是在记录层协议中采用的对称加密算法，以保护主要数据流的机密性。而（哈希算法）需要根据版本来判断其使用方式：</p><ul><li>在TLS1.1之前，（哈希算法）主要用于对数据流进行完整性校验，而密钥生成采用的PRF函数写死为MD5+SHA1；签名算法用的哈希函数采用SHA1和（或）MD5；</li><li>TLS1.2中，PRF中采用的哈希函数也由cipher suite决定；而签名算法用的哈希函数采用专门的扩展”signature algorithms”来决定。<br>因此SHA算法（即SHA1）用于完整性校验（TLS1.1），以及PRF密钥生成（TLS1.2）。</li></ul><h3 id="TLS1-3"><a href="#TLS1-3" class="headerlink" title="TLS1.3"></a>TLS1.3</h3><p>CipherSuite TLS_（AEAD算法）<br>TLS1.3的密码套件发生了大幅变化，舍去了（密钥协商算法），这是因为密钥协商算法在第一个数据包的”supported groups”中默默地进行，传输到server处，就已选定好协商算法，第二个数据包就要进行加密了！</p><p>以TLS_AES_128_GCM_SHA256为例，GCM指的是采用了认证加密技术中的GCM工作模式来保证数据流的机密性和完整性。其中AES_128指的是AEAD（认证加密）中的加密算法，SHA256指的是GCM中的哈希算法。</p><h3 id="TLCP"><a href="#TLCP" class="headerlink" title="TLCP"></a>TLCP</h3><p>TLCP密码套件的结构类似于TLS1.2（但少了个with）。<br>以ECC_SM4_SM3为例，ECC代表密钥交换算法为ECC加密（注意与ECDH不同！），SM4指的是数据流加密算法，SM3指的是完整性校验时采用的哈希算法。<br>（国标这里写得很含糊，不知道PRF函数调用了cipher suite中的组件，还是类似于TLS1.1中将PRF写死的方式？签名算法用的哈希也有类似的问题！如果按照TLS1.1再开发的话，其中蕴含的安全性威胁不容小觑。）</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果通信信道采用了SSL VPN进行安全防护，就要判断是否为TLCP协议。判断方式就是看版本号是否为0x0101。至于采用的密码算法，根据不同版本来对号入座。</p>]]></content>
    
    
    
    <tags>
      
      <tag>密评</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何插入图片</title>
    <link href="/2024/08/12/%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <url>/2024/08/12/%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<p>从8-9起，文章里插入的图片总是无法正确显示，怎么回事呢？在网上寻找了大量的解决方案，都没能成功。</p><p><img src="/2024/08/12/%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/1.png"></p><p>8-13新发现：上面两个图片引用，路径不正确。hexo在md中图片引用能够链接到本地图片，但是转为html之后，图片没有正确显示。经过检查，生成的网页中图片路径为<a href="http://localhost:4000/2024/08/12/%E5%9B%BE%E7%89%87/08/12/%E5%9B%BE%E7%89%87/1.png%EF%BC%8C%E4%BD%86%E6%AD%A3%E7%A1%AE%E8%B7%AF%E5%BE%84%E5%BA%94%E8%AF%A5%E4%B8%BAhttp://localhost:4000/2024/08/12/%E5%9B%BE%E7%89%871.png%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E8%AF%B4%EF%BC%8C%E9%A2%9D%E5%A4%96%E8%BF%AD%E4%BB%A3%E4%BA%86%E4%B8%80%E6%AC%A1%E3%80%82">http://localhost:4000/2024/08/12/图片/08/12/图片/1.png，但正确路径应该为http://localhost:4000/2024/08/12/图片1.png，也就是说，额外迭代了一次。</a></p><p>通过询问AI，发现正确的引用方式应该是在路径前加&#x2F;。于是有了如下解决方案：更改语句</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&quot;[](<span class="hljs-link">如何插入图片/1.png</span>)&quot;<br></code></pre></td></tr></table></figure><p>为</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&quot;![](<span class="hljs-link">/如何插入图片/1.png</span>)&quot;<br></code></pre></td></tr></table></figure><p>网页显示成功！！！但是markdown又不显示了……具体原因不明。至此，markdown插入本地图片的问题得到阶段性解决。</p><p>下午写新文章时，图片再次崩掉了。经过排查，发现是先前的一通乱试，将图片导入了public文件夹中。从头引用图片，应该采取相对路径格式，即：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&quot;![](<span class="hljs-link">./如何插入图片/1.png</span>)&quot;<br></code></pre></td></tr></table></figure><p>自此就可以愉快地写文章啦！<br>现在剩余的问题是，引用网页上的图片又无法显示。而这次生成的html中，网页链接是正确的！同样的链接，为什么直接访问就能显示，自己生成的网页却不能显示？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>游戏评测—国家公园</title>
    <link href="/2024/08/11/%E6%B8%B8%E6%88%8F%E8%AF%84%E6%B5%8B%E2%80%94%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD/"/>
    <url>/2024/08/11/%E6%B8%B8%E6%88%8F%E8%AF%84%E6%B5%8B%E2%80%94%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD/</url>
    
    <content type="html"><![CDATA[<p>《国家公园》这款游戏使用了Fifty-Nine Parks Print Series系列的插画，以此致敬美国境内的各座国家公园。</p><p>每位玩家控制两个旅行家，在每个世界中徒步穿越一条新的路线去到不同的风景并参观不同的公园。通过在旅途中使用不同的装备、水壶，专区各种资源，并拍摄各种各样的照片。每一次旅行都会因为路线、时节的不同变得独一无二。</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><ul><li>上市时间：2019年</li><li>类型：德式</li><li>平均时长：15分钟&#x2F;人</li><li>设置时长：&lt;5分钟</li></ul><h2 id="第一印象"><a href="#第一印象" class="headerlink" title="第一印象"></a>第一印象</h2><p>一定是一对旅游好搭子设计的游戏！包装封面就是梦中森林动物园该有的样子，整个大盒有分量，包装非常紧凑。经过脑补，应该是一个在旅程中拍摄美景，获取资源，最终赚分的游戏。</p><p><img src="/2024/08/11/%E6%B8%B8%E6%88%8F%E8%AF%84%E6%B5%8B%E2%80%94%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD/1.jpg"></p><p><img src="/2024/08/11/%E6%B8%B8%E6%88%8F%E8%AF%84%E6%B5%8B%E2%80%94%E5%9B%BD%E5%AE%B6%E5%85%AC%E5%9B%AD/2.jpg"></p><p>众所周知，桌游中有几项苛刻的配置，导致桌游圈子一直不大。这几项配置就是：难度、空间、时间还有朋友。</p><h3 id="熟悉规则"><a href="#熟悉规则" class="headerlink" title="熟悉规则"></a>熟悉规则</h3><p>3.5&#x2F;10的难度，整体规则并不复杂，说明书也比较好理解，但是有种读论文的感觉。建议在说明书第二章加入符号说明，方便玩家查阅。</p><p>虽然为了体验游玩桌游的全过程选择了硬啃说明书，但是最终不得不查阅了B站的规则讲解。</p><p>了解规则后，猜测这款桌游是以我为主的发展路线，兼顾了玩家间的博弈，不太会引起桌游搭子之间的撕逼。</p><h3 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h3><p>从配置来看，桌游非常亲民。在空间方面，一张麦当劳的二人桌能勉强放下整套配件；在时间方面，二人游玩可以做到45分钟一局；最关键的是，这个游戏可以独自游玩！</p><h2 id="游玩体验"><a href="#游玩体验" class="headerlink" title="游玩体验"></a>游玩体验</h2><p>8月10日，和小张同学开了第一轮。</p><p>未完待续……</p>]]></content>
    
    
    
    <tags>
      
      <tag>桌游</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF密码竞赛系列（一） 准备工作</title>
    <link href="/2024/08/09/CTF%E5%AF%86%E7%A0%81%E7%AB%9E%E8%B5%9B%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
    <url>/2024/08/09/CTF%E5%AF%86%E7%A0%81%E7%AB%9E%E8%B5%9B%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="所需知识"><a href="#所需知识" class="headerlink" title="所需知识"></a>所需知识</h1><h2 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h2><h3 id="对称密码"><a href="#对称密码" class="headerlink" title="对称密码"></a>对称密码</h3><p>分组密码、流密码、哈希函数、伪随机数、消息认证码</p><h3 id="公钥密码"><a href="#公钥密码" class="headerlink" title="公钥密码"></a>公钥密码</h3><p>数字签名、公钥加密、密钥交换</p><h3 id="基础设施"><a href="#基础设施" class="headerlink" title="基础设施"></a>基础设施</h3><p>PKI、身份鉴别、数字证书、安全通信协议、身份鉴别</p><h3 id="密钥管理"><a href="#密钥管理" class="headerlink" title="密钥管理"></a>密钥管理</h3><h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><h2 id="编码解码工具——-随波逐流-CTF解码工具"><a href="#编码解码工具——-随波逐流-CTF解码工具" class="headerlink" title="编码解码工具——[随波逐流]CTF解码工具"></a>编码解码工具——[随波逐流]CTF解码工具</h2><h2 id="加密解密工具——hashcat"><a href="#加密解密工具——hashcat" class="headerlink" title="加密解密工具——hashcat"></a>加密解密工具——hashcat</h2><h2 id="抓包工具——wireshark"><a href="#抓包工具——wireshark" class="headerlink" title="抓包工具——wireshark"></a>抓包工具——wireshark</h2><h2 id="随机数分析工具——random-text"><a href="#随机数分析工具——random-text" class="headerlink" title="随机数分析工具——random text"></a>随机数分析工具——random text</h2><h2 id="代码工具——sagemath"><a href="#代码工具——sagemath" class="headerlink" title="代码工具——sagemath"></a>代码工具——sagemath</h2>]]></content>
    
    
    
    <tags>
      
      <tag>密码学</tag>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>入门第一步</title>
    <link href="/2024/08/08/hello-world/"/>
    <url>/2024/08/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="新的开始！"><a href="#新的开始！" class="headerlink" title="新的开始！"></a>新的开始！</h2><h3 id="创建一篇新的博文"><a href="#创建一篇新的博文" class="headerlink" title="创建一篇新的博文"></a>创建一篇新的博文</h3><pre><code class="hljs">在终端键入如下内容：</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">其中&quot;My New Post&quot;代表新博文的标题，起自己喜欢的就好了！</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署至远程站点"><a href="#部署至远程站点" class="headerlink" title="部署至远程站点"></a>部署至远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
